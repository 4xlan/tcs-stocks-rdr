// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/tcsrdrconfig/config_struct.go

// Package tcsrgrconfig is a generated GoMock package.
package tcsrgrconfig

import (
	reflect "reflect"
	tcsrdrconfig "tcsrdr/internal/tcsrdrconfig"

	gomock "github.com/golang/mock/gomock"
)

// MockTCSRDRConfiguration is a mock of TCSRDRConfiguration interface.
type MockTCSRDRConfiguration struct {
	ctrl     *gomock.Controller
	recorder *MockTCSRDRConfigurationMockRecorder
}

// MockTCSRDRConfigurationMockRecorder is the mock recorder for MockTCSRDRConfiguration.
type MockTCSRDRConfigurationMockRecorder struct {
	mock *MockTCSRDRConfiguration
}

// NewMockTCSRDRConfiguration creates a new mock instance.
func NewMockTCSRDRConfiguration(ctrl *gomock.Controller) *MockTCSRDRConfiguration {
	mock := &MockTCSRDRConfiguration{ctrl: ctrl}
	mock.recorder = &MockTCSRDRConfigurationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTCSRDRConfiguration) EXPECT() *MockTCSRDRConfigurationMockRecorder {
	return m.recorder
}

// GetConfig mocks base method.
func (m *MockTCSRDRConfiguration) GetConfig(config *tcsrdrconfig.TCSRDRCfgFile) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetConfig", config)
}

// GetConfig indicates an expected call of GetConfig.
func (mr *MockTCSRDRConfigurationMockRecorder) GetConfig(config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockTCSRDRConfiguration)(nil).GetConfig), config)
}
